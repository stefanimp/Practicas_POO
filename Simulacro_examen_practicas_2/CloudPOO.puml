@startuml
skinparam {
    style strictuml
    classAttributeIconSize 0
    classBackGroundColor yellow
}

class Generador {
  - modelo: cadena
  - potencia: decimal
  + Generador(modelo,potencia)
  + getPotencia(): decimal
}

class DataCenter {
   - ubicacion: cadena
   - superficie: decimal {metros cuadrados}
   - tecnicos: entero = 1 { entre 1 y 4 }

   + DataCenter(ubicacion, superficie)
   + setFuente( Generador)
   + getPotenciaDisponible(): decimal
   + instala(Dispositivo)
   + getDispositivo(cual): Dispositivo*
   + getNumDispositivos(): entero
   + consumoActual(): decimal
}
abstract class Dispositivo {
 - descripcion: cadena
 - consumo: decimal
 - activo: booleano = falso
 + Dispositivo(descripcion, consumo)
 + {abstract}getDescripcion(): cadena
 + isActivo(): booleano
 + conmutaEstado(): booleano
 + getConsumo(): decimal
}

class RackServidores extends Dispositivo {
- totalServidores: entero
- servidoresOperativos: entero {0..totalServidores}
+ RackServidores(descripcion,consumoTotal,totalServidores)
+ getDescripcion(): cadena
+ getConsumo(): real
}
class RackAlmacenamiento extends Dispositivo {
- capacidadTotal: entero {en Terabytes}
+ DataStore(descripcion, consumoTotal, capacidadTotal)
+ getDescripcion(): cadena
}
class DataCenterException<<Exception>>

DataCenter o-"{0..10}" Dispositivo
Generador "fuente\n0..1"-* DataCenter
DataCenterException <.right. DataCenter
DataCenterException -down-|> std::out_of_range


@enduml